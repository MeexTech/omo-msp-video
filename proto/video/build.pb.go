// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/video/build.proto

package video

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 切割策略
type SplitStrategy int32

const (
	SplitStrategy_SIZE SplitStrategy = 0
	SplitStrategy_TIME SplitStrategy = 1
)

var SplitStrategy_name = map[int32]string{
	0: "SIZE",
	1: "TIME",
}

var SplitStrategy_value = map[string]int32{
	"SIZE": 0,
	"TIME": 1,
}

func (x SplitStrategy) String() string {
	return proto.EnumName(SplitStrategy_name, int32(x))
}

func (SplitStrategy) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_475d49d3c86cca58, []int{0}
}

type BuildOptions struct {
	//帧率，默认值为24
	Fps int32 `protobuf:"varint,1,opt,name=fps,proto3" json:"fps,omitempty"`
	//分辨率，默认值为 "1920x1080"
	Resolution           string   `protobuf:"bytes,2,opt,name=resolution,proto3" json:"resolution,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildOptions) Reset()         { *m = BuildOptions{} }
func (m *BuildOptions) String() string { return proto.CompactTextString(m) }
func (*BuildOptions) ProtoMessage()    {}
func (*BuildOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_475d49d3c86cca58, []int{0}
}

func (m *BuildOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildOptions.Unmarshal(m, b)
}
func (m *BuildOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildOptions.Marshal(b, m, deterministic)
}
func (m *BuildOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildOptions.Merge(m, src)
}
func (m *BuildOptions) XXX_Size() int {
	return xxx_messageInfo_BuildOptions.Size(m)
}
func (m *BuildOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildOptions.DiscardUnknown(m)
}

var xxx_messageInfo_BuildOptions proto.InternalMessageInfo

func (m *BuildOptions) GetFps() int32 {
	if m != nil {
		return m.Fps
	}
	return 0
}

func (m *BuildOptions) GetResolution() string {
	if m != nil {
		return m.Resolution
	}
	return ""
}

// 构建回复
type BuildResponse struct {
	// 状态
	Status *Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// 任务ID
	TaskID               string   `protobuf:"bytes,2,opt,name=taskID,proto3" json:"taskID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildResponse) Reset()         { *m = BuildResponse{} }
func (m *BuildResponse) String() string { return proto.CompactTextString(m) }
func (*BuildResponse) ProtoMessage()    {}
func (*BuildResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_475d49d3c86cca58, []int{1}
}

func (m *BuildResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildResponse.Unmarshal(m, b)
}
func (m *BuildResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildResponse.Marshal(b, m, deterministic)
}
func (m *BuildResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildResponse.Merge(m, src)
}
func (m *BuildResponse) XXX_Size() int {
	return xxx_messageInfo_BuildResponse.Size(m)
}
func (m *BuildResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BuildResponse proto.InternalMessageInfo

func (m *BuildResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *BuildResponse) GetTaskID() string {
	if m != nil {
		return m.TaskID
	}
	return ""
}

// 合并请求
type CombineRequest struct {
	// 视频文件地址
	// 网络地址使用http://或https://前缀
	// 内置存储使用file://前缀
	Video                []string `protobuf:"bytes,1,rep,name=video,proto3" json:"video,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CombineRequest) Reset()         { *m = CombineRequest{} }
func (m *CombineRequest) String() string { return proto.CompactTextString(m) }
func (*CombineRequest) ProtoMessage()    {}
func (*CombineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_475d49d3c86cca58, []int{2}
}

func (m *CombineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CombineRequest.Unmarshal(m, b)
}
func (m *CombineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CombineRequest.Marshal(b, m, deterministic)
}
func (m *CombineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CombineRequest.Merge(m, src)
}
func (m *CombineRequest) XXX_Size() int {
	return xxx_messageInfo_CombineRequest.Size(m)
}
func (m *CombineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CombineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CombineRequest proto.InternalMessageInfo

func (m *CombineRequest) GetVideo() []string {
	if m != nil {
		return m.Video
	}
	return nil
}

// 切割请求
type SplitRequest struct {
	// 视频文件地址
	// 网络地址使用http://或https://前缀
	// 内置存储使用file://前缀
	Video string `protobuf:"bytes,1,opt,name=video,proto3" json:"video,omitempty"`
	// 切割策略
	Strategy SplitStrategy `protobuf:"varint,2,opt,name=strategy,proto3,enum=video.SplitStrategy" json:"strategy,omitempty"`
	// 切割因子，strategy=SIZE时，此值的单位是字节，strategy=TIME时，此值的单位时秒
	Factor               int32    `protobuf:"varint,3,opt,name=factor,proto3" json:"factor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SplitRequest) Reset()         { *m = SplitRequest{} }
func (m *SplitRequest) String() string { return proto.CompactTextString(m) }
func (*SplitRequest) ProtoMessage()    {}
func (*SplitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_475d49d3c86cca58, []int{3}
}

func (m *SplitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SplitRequest.Unmarshal(m, b)
}
func (m *SplitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SplitRequest.Marshal(b, m, deterministic)
}
func (m *SplitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SplitRequest.Merge(m, src)
}
func (m *SplitRequest) XXX_Size() int {
	return xxx_messageInfo_SplitRequest.Size(m)
}
func (m *SplitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SplitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SplitRequest proto.InternalMessageInfo

func (m *SplitRequest) GetVideo() string {
	if m != nil {
		return m.Video
	}
	return ""
}

func (m *SplitRequest) GetStrategy() SplitStrategy {
	if m != nil {
		return m.Strategy
	}
	return SplitStrategy_SIZE
}

func (m *SplitRequest) GetFactor() int32 {
	if m != nil {
		return m.Factor
	}
	return 0
}

//图片
type Image struct {
	// 图片文件地址
	// 网络地址使用http://或https://前缀
	// 内置存储使用file://前缀
	File string `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	// 时间戳的偏移值, 单位为毫秒
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// 持续时间, 单位为毫秒,超出此时间的内容会被截断
	Duration             int64    `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Image) Reset()         { *m = Image{} }
func (m *Image) String() string { return proto.CompactTextString(m) }
func (*Image) ProtoMessage()    {}
func (*Image) Descriptor() ([]byte, []int) {
	return fileDescriptor_475d49d3c86cca58, []int{4}
}

func (m *Image) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Image.Unmarshal(m, b)
}
func (m *Image) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Image.Marshal(b, m, deterministic)
}
func (m *Image) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Image.Merge(m, src)
}
func (m *Image) XXX_Size() int {
	return xxx_messageInfo_Image.Size(m)
}
func (m *Image) XXX_DiscardUnknown() {
	xxx_messageInfo_Image.DiscardUnknown(m)
}

var xxx_messageInfo_Image proto.InternalMessageInfo

func (m *Image) GetFile() string {
	if m != nil {
		return m.File
	}
	return ""
}

func (m *Image) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *Image) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

//音频
type Audio struct {
	// 音频文件地址
	// 网络地址使用http://或https://前缀
	// 内置存储使用file://前缀
	File string `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	// 时间戳的偏移值, 单位为毫秒
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// 持续时间, 单位为毫秒,超出此时间的内容会被截断
	Duration             int64    `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Audio) Reset()         { *m = Audio{} }
func (m *Audio) String() string { return proto.CompactTextString(m) }
func (*Audio) ProtoMessage()    {}
func (*Audio) Descriptor() ([]byte, []int) {
	return fileDescriptor_475d49d3c86cca58, []int{5}
}

func (m *Audio) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Audio.Unmarshal(m, b)
}
func (m *Audio) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Audio.Marshal(b, m, deterministic)
}
func (m *Audio) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Audio.Merge(m, src)
}
func (m *Audio) XXX_Size() int {
	return xxx_messageInfo_Audio.Size(m)
}
func (m *Audio) XXX_DiscardUnknown() {
	xxx_messageInfo_Audio.DiscardUnknown(m)
}

var xxx_messageInfo_Audio proto.InternalMessageInfo

func (m *Audio) GetFile() string {
	if m != nil {
		return m.File
	}
	return ""
}

func (m *Audio) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *Audio) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

// 渲染请求
type RenderRequest struct {
	// 图片集
	Image []*Image `protobuf:"bytes,1,rep,name=image,proto3" json:"image,omitempty"`
	// 音频集
	Audio []*Audio `protobuf:"bytes,2,rep,name=audio,proto3" json:"audio,omitempty"`
	// 视频的时长，如果此值为0，将使用图片和视频较大的duration值作为整个视频的时长
	Duration int64 `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	// 构建选项
	Options              *BuildOptions `protobuf:"bytes,10,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *RenderRequest) Reset()         { *m = RenderRequest{} }
func (m *RenderRequest) String() string { return proto.CompactTextString(m) }
func (*RenderRequest) ProtoMessage()    {}
func (*RenderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_475d49d3c86cca58, []int{6}
}

func (m *RenderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenderRequest.Unmarshal(m, b)
}
func (m *RenderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenderRequest.Marshal(b, m, deterministic)
}
func (m *RenderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenderRequest.Merge(m, src)
}
func (m *RenderRequest) XXX_Size() int {
	return xxx_messageInfo_RenderRequest.Size(m)
}
func (m *RenderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RenderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RenderRequest proto.InternalMessageInfo

func (m *RenderRequest) GetImage() []*Image {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *RenderRequest) GetAudio() []*Audio {
	if m != nil {
		return m.Audio
	}
	return nil
}

func (m *RenderRequest) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *RenderRequest) GetOptions() *BuildOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

func init() {
	proto.RegisterEnum("video.SplitStrategy", SplitStrategy_name, SplitStrategy_value)
	proto.RegisterType((*BuildOptions)(nil), "video.BuildOptions")
	proto.RegisterType((*BuildResponse)(nil), "video.BuildResponse")
	proto.RegisterType((*CombineRequest)(nil), "video.CombineRequest")
	proto.RegisterType((*SplitRequest)(nil), "video.SplitRequest")
	proto.RegisterType((*Image)(nil), "video.Image")
	proto.RegisterType((*Audio)(nil), "video.Audio")
	proto.RegisterType((*RenderRequest)(nil), "video.RenderRequest")
}

func init() {
	proto.RegisterFile("proto/video/build.proto", fileDescriptor_475d49d3c86cca58)
}

var fileDescriptor_475d49d3c86cca58 = []byte{
	// 435 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x53, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xed, 0xd6, 0x75, 0x9a, 0x4e, 0x93, 0x2a, 0x9a, 0x06, 0xb0, 0x72, 0x40, 0x91, 0x11, 0x28,
	0x42, 0x22, 0x45, 0x06, 0x21, 0x8e, 0x7c, 0xf5, 0xe0, 0x03, 0x54, 0x5a, 0x73, 0xe2, 0xb6, 0xc1,
	0xeb, 0xb2, 0xc2, 0xf5, 0x1a, 0xef, 0x1a, 0x89, 0xbf, 0xc3, 0x1f, 0xe0, 0x2f, 0xa2, 0x1d, 0xaf,
	0x23, 0x5b, 0xe2, 0xe3, 0xd2, 0xdb, 0xce, 0xcc, 0x9b, 0xf7, 0x66, 0x9e, 0xc7, 0x70, 0xaf, 0x6e,
	0xb4, 0xd5, 0x17, 0xdf, 0x55, 0x2e, 0xf5, 0xc5, 0xae, 0x55, 0x65, 0xbe, 0xa5, 0x0c, 0x86, 0x94,
	0x5a, 0x45, 0xc3, 0xba, 0xf9, 0x22, 0x1a, 0xe9, 0x01, 0xf1, 0x2b, 0x98, 0xbd, 0x71, 0xf8, 0xab,
	0xda, 0x2a, 0x5d, 0x19, 0x5c, 0x40, 0x50, 0xd4, 0x26, 0x62, 0x6b, 0xb6, 0x09, 0xb9, 0x7b, 0xe2,
	0x7d, 0x80, 0x46, 0x1a, 0x5d, 0xb6, 0x0e, 0x10, 0x1d, 0xae, 0xd9, 0xe6, 0x84, 0x0f, 0x32, 0xf1,
	0x07, 0x98, 0x13, 0x03, 0x97, 0xa6, 0xd6, 0x95, 0x91, 0xf8, 0x10, 0x26, 0xc6, 0x0a, 0xdb, 0x76,
	0x2c, 0xa7, 0xc9, 0x7c, 0x4b, 0xba, 0xdb, 0x8c, 0x92, 0xdc, 0x17, 0xf1, 0x2e, 0x4c, 0xac, 0x30,
	0x5f, 0xd3, 0x77, 0x9e, 0xd3, 0x47, 0xf1, 0x23, 0x38, 0x7b, 0xab, 0x6f, 0x76, 0xaa, 0x92, 0x5c,
	0x7e, 0x6b, 0xa5, 0xb1, 0xb8, 0x84, 0x6e, 0x8d, 0x88, 0xad, 0x83, 0xcd, 0x09, 0xef, 0x82, 0xb8,
	0x82, 0x59, 0x56, 0x97, 0xca, 0xfe, 0x01, 0xc5, 0xf6, 0x28, 0x7c, 0x0a, 0x53, 0x63, 0x1b, 0x61,
	0xe5, 0xf5, 0x0f, 0xd2, 0x39, 0x4b, 0x96, 0xfd, 0x38, 0xae, 0x39, 0xf3, 0x35, 0xbe, 0x47, 0xb9,
	0xb9, 0x0a, 0xf1, 0xd9, 0xea, 0x26, 0x0a, 0xc8, 0x04, 0x1f, 0xc5, 0x57, 0x10, 0xa6, 0x37, 0xe2,
	0x5a, 0x22, 0xc2, 0x51, 0xa1, 0x4a, 0xe9, 0x75, 0xe8, 0xed, 0x9a, 0x74, 0x51, 0x18, 0x69, 0x49,
	0x24, 0xe0, 0x3e, 0xc2, 0x15, 0x4c, 0xf3, 0xb6, 0x11, 0x64, 0x5d, 0x40, 0x95, 0x7d, 0xec, 0x08,
	0x5f, 0xb7, 0xb9, 0xd2, 0xb7, 0x46, 0xf8, 0x93, 0xc1, 0x9c, 0xcb, 0x2a, 0x97, 0x4d, 0xef, 0x49,
	0x0c, 0xa1, 0x72, 0x33, 0x93, 0x73, 0xa7, 0xc9, 0xcc, 0xaf, 0x4e, 0x7b, 0xf0, 0xae, 0xe4, 0x30,
	0xc2, 0x8d, 0x11, 0x1d, 0x8e, 0x30, 0x34, 0x1a, 0xef, 0x4a, 0xff, 0x52, 0xc5, 0x27, 0x70, 0xac,
	0xbb, 0xe3, 0x89, 0x80, 0xbe, 0xf7, 0xb9, 0x67, 0x18, 0xde, 0x15, 0xef, 0x31, 0x8f, 0x1f, 0xc0,
	0x7c, 0xe4, 0x3c, 0x4e, 0xe1, 0x28, 0x4b, 0x3f, 0x5d, 0x2e, 0x0e, 0xdc, 0xeb, 0x63, 0xfa, 0xfe,
	0x72, 0xc1, 0x92, 0x5f, 0x0c, 0x42, 0x6a, 0xc7, 0x97, 0x70, 0xec, 0xaf, 0x01, 0xef, 0x78, 0xde,
	0xf1, 0x75, 0xac, 0x96, 0x43, 0xb9, 0xfe, 0x08, 0xe3, 0x03, 0x7c, 0x0e, 0x21, 0x09, 0xe1, 0xf9,
	0xf0, 0x83, 0xff, 0xaf, 0xeb, 0x05, 0x4c, 0x3a, 0x0b, 0xb1, 0x47, 0x8c, 0x1c, 0xfd, 0x5b, 0xdf,
	0x6e, 0x42, 0xbf, 0xd3, 0xb3, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x94, 0x4f, 0x6a, 0x94, 0x8a,
	0x03, 0x00, 0x00,
}
